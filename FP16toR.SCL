FUNCTION FC76 : VOID
TITLE = 'Convert FP16 format to standard REAL'
VERSION: '0.9'
AUTHOR: RoVRy
NAME: FP16toR
FAMILY: CONVERT

KNOW_HOW_PROTECT

VAR_INPUT
    In                  : WORD  := W#16#0000;
    CSF                 : BOOL  := FALSE;
END_VAR

VAR_OUTPUT
    Out                 : STRUCT
        Value           : REAL  := 0.0;
        ST              : BYTE  := B#16#FF;
    END_STRUCT;
END_VAR

VAR_TEMP

    twIn                : WORD;
    taIn AT twIn        : ARRAY[0..15] OF BOOL;

    tdwOut              : DWORD;
    trOut AT tdwOut     : REAL;
    taOut AT tdwOut     : ARRAY[0..31] OF BOOL;

    tiExp               : INT;
    taExp AT tiExp      : ARRAY[0..15] OF BOOL;

END_VAR

BEGIN

    tdwOut := 16#0000_0000;
    tiExp  := 0;

    twIn := In;

    // Copy exponent bits
    taExp[12] := taIn[6];
    taExp[11] := taIn[5];
    taExp[10] := taIn[4];
    taExp[9]  := taIn[3];
    taExp[8]  := taIn[2];

    // Copy mantissa bits
    taOut[14] := taIn[1];
    taOut[13] := taIn[0];
    taOut[12] := taIn[15];
    taOut[11] := taIn[14];
    taOut[10] := taIn[13];
    taOut[9]  := taIn[12];
    taOut[8]  := taIn[11];
    taOut[23] := taIn[10];
    taOut[22] := taIn[9];
    taOut[21] := taIn[8];

    // Converting 5-bit exponent format to 8-bit exp.fmt
    tiExp := tiExp + 112;

    IF tiExp = 143 THEN
        tiExp := 255;
        tdwOut := 16#0000_0000;
    END_IF;
    
    IF tiExp = 112 THEN
        IF tdwOut <> 16#0000_0000 THEN
            tiExp := tiExp + 1;
            WHILE taOut[15] = 0 DO
                tdwOut := SHL(IN := tdwOut, N := 1);
                tiExp := tiExp - 1;
            END_WHILE;
        ELSE
            tiExp := 0;
            tdwOut := 16#0000_0000;
        END_IF;
    END_IF;

    // Copy the sign bit (the most left)
    taOut[7]  := taIn[7];
    // Copy exponent bits to out
    taOut[6]  := taExp[15];
    taOut[5]  := taExp[14];
    taOut[4]  := taExp[13];
    taOut[3]  := taExp[12];
    taOut[2]  := taExp[11];
    taOut[1]  := taExp[10];
    taOut[0]  := taExp[9];
    taOut[15] := taExp[8];

    Out.Value := trOut;
    
    IF CSF THEN
        Out.ST := B#16#00;
    ELSE
        Out.ST := B#16#80;        
    END_IF;
    
END_FUNCTION
